buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.6.2"
//        classpath "org.grails.plugins:hibernate4:5.0.0"
    }
}

version "0.1"
group "repoman"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
//    compile "org.grails.plugins:hibernate4"
//    compile "org.hibernate:hibernate-ehcache"
    compile 'org.grails.plugins:mongodb:5.0.2'
    console "org.grails:grails-console"
    profile "org.grails.profiles:web:$grailsVersion"
    runtime "org.grails.plugins:asset-pipeline:3.0.10"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
//    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    compile 'com.codeborne:phantomjsdriver:1.2.1'
    testCompile 'org.seleniumhq.selenium:selenium-chrome-driver:2.52.0'
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    //Unirest
    compile "com.mashape.unirest:unirest-java:1.4.7"

    //Heroku Deployment
    runtime 'postgresql:postgresql:8.4-702.jdbc3'
    provided "org.springframework.boot:spring-boot-starter-tomcat"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

tasks.withType(Test) {
    // This is not needed, but I like to see which tests have run
    testLogging {
        events "passed", "skipped", "failed"
    }
}


//Deploy on Heroku
task stage() {
    dependsOn clean, war
}
tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean
